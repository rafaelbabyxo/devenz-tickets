// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  company   String
  password  String
  Sessions  Sessions[]
  Tickets   Ticket[]
  Responses Response[]
}

model Sessions {
  id        String   @id @default(cuid())
  userId    String
  token     String
  expiresAt DateTime
  valid     Boolean
  createdAt DateTime @default(now())
  User      User     @relation(fields: [userId], references: [id])
}

model Ticket {
  id           String     @id @default(cuid())
  ticketNumber String     @unique
  cc           String? // Opcional
  subject      String
  message      String
  files        String[]   @default([]) // Lista obrigatória com valor padrão vazio
  priority     String
  department   String
  userId       String
  createdAt    DateTime   @default(now()) // Adicionando campo de data de criação
  User         User       @relation(fields: [userId], references: [id])
  Responses    Response[] @relation
}

model Response {
  id         String   @id @default(cuid())
  message    String
  lastUpdate DateTime @default(now())
  ticketId   String
  userId     String
  Ticket     Ticket   @relation(fields: [ticketId], references: [id])
  User       User     @relation(fields: [userId], references: [id])
}